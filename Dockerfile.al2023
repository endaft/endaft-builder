FROM --platform=$TARGETPLATFORM public.ecr.aws/amazonlinux/amazonlinux:2023-minimal

ARG TARGETARCH
ENV TARGETARCH=${TARGETARCH}
ENV IN_DOCKER="true"
ENV PUB_CACHE=/var/dart_pub_cache
ENV PATH="/var/dart_pub_cache/bin:~/.pub-cache/bin:/root/.pub-cache/bin:/usr/local/sbin/dart-sdk/bin:/usr/local/sbin/dart-sdk/lib:/usr/local/sbin/dart-sdk/include:$PATH"

RUN dnf -y clean all
RUN dnf -y update && dnf -y upgrade
RUN dnf -y install git jq zip unzip make glibc gcc perl-CPAN perl-DateTime perl-Capture-Tiny
RUN dnf -y clean all && rm -rf /var/cache/dnf
RUN mkdir -p /usr/local/sbin

RUN git clone https://github.com/linux-test-project/lcov.git /lcov && \
    cd /lcov && make install && rm -rf /lcov

RUN mkdir -p /home/temp
WORKDIR /home/temp
RUN DART_ARCH=$(if [ "$TARGETARCH" = "amd64" ]; then echo 'x64'; else echo 'arm64'; fi); \
    echo "Using Dart Archive: dartsdk-linux-$DART_ARCH-release.zip for '$TARGETARCH'"; \
    curl -s -O "https://storage.googleapis.com/dart-archive/channels/stable/release/latest/sdk/dartsdk-linux-$DART_ARCH-release.zip"
RUN unzip -qq dartsdk-linux-* -d /usr/local/sbin

WORKDIR /
RUN rm -rf /home/temp
RUN dart --disable-analytics
RUN dart pub global activate pana
RUN dart pub global activate dartdoc
RUN dart pub global activate coverage
RUN dart pub global activate cobertura
RUN dart pub global activate endaft

VOLUME [ "/home/code" ]

WORKDIR "/home/code"

ENTRYPOINT ["endaft", "build"]
